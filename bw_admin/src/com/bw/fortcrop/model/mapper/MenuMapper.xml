<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Menu">

	<resultMap id="RM.Menu" type="com.bw.fortcrop.model.Menu">
        <result property="parentId" column="parent_id"/>
        <result property="nodeName" column="node_name"/>
        <result property="childNode" column="child_node"/>
        <result property="userFlag" column="user_flag"/>
        <result property="linkUrl" column="link_url"/>
        <result property="orderMun" column="order_mun"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Menu.columns">
	    <![CDATA[
		parent_id,node_name,child_node,user_flag,link_url,order_mun
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="Menu.insert" useGeneratedKeys="true" keyProperty="parentId">
    <![CDATA[
        INSERT INTO bw_menu (
        	parent_id ,
        	node_name ,
        	child_node ,
        	user_flag ,
        	link_url ,
        	order_mun 
        ) VALUES (
        	#{parentId} ,
        	#{nodeName} ,
        	#{childNode} ,
        	#{userFlag} ,
        	#{linkUrl} ,
        	#{orderMun} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="Menu.update" >
    <![CDATA[
        UPDATE bw_menu SET
	        node_name = #{nodeName} ,
	        child_node = #{childNode} ,
	        user_flag = #{userFlag} ,
	        link_url = #{linkUrl} ,
	        order_mun = #{orderMun} 
        WHERE 
	        parent_id = #{parentId} 
    ]]>
	</update>

    <delete id="Menu.delete">
    <![CDATA[
        DELETE FROM bw_menu WHERE
        parent_id = #{id} 
    ]]>
    </delete>
    
    <select id="Menu.getById" resultMap="RM.Menu">
		SELECT <include refid="Menu.columns" />
	    <![CDATA[
		    FROM bw_menu 
	        WHERE 
		        parent_id = #{id} 
	    ]]>
	</select>
	
	<sql id="Menu.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(parentId)">
				AND parent_id = #{parentId}
			</if>
	       <if test="@Ognl@isNotEmpty(nodeName)">
				AND node_name = #{nodeName}
			</if>
	       <if test="@Ognl@isNotEmpty(childNode)">
				AND child_node = #{childNode}
			</if>
	       <if test="@Ognl@isNotEmpty(userFlag)">
				AND user_flag = #{userFlag}
			</if>
	       <if test="@Ognl@isNotEmpty(linkUrl)">
				AND link_url = #{linkUrl}
			</if>
	       <if test="@Ognl@isNotEmpty(orderMun)">
				AND order_mun = #{orderMun}
			</if>
		</where>
	</sql>
		
    <select id="Menu.findPage.count" resultType="long">
        SELECT count(*) FROM bw_menu 
		<include refid="Menu.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Menu.findPage" resultMap="RM.Menu">
    	SELECT <include refid="Menu.columns" />
	    FROM bw_menu 
		<include refid="Menu.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

