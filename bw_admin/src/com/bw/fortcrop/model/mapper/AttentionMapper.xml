<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
"http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Attention">

	<resultMap id="RM.Attention" type="com.bw.fortcrop.model.Attention">
        <result property="flowId" column="flow_id"/>
        <result property="attentionUserId" column="attention_user_id"/>
        <result property="beAttentionUserId" column="be_attention_user_id"/>
        <result property="attentionTime" column="attention_time"/>
        <result property="beAttentionIdentity" column="be_attention_identity"/>
	</resultMap>
	
	<!-- 用于select查询公用抽取的列 -->
	<sql id="Attention.columns">
	    <![CDATA[
		flow_id,attention_user_id,be_attention_user_id,attention_time,be_attention_identity
	    ]]>
	</sql>

	<!-- useGeneratedKeys="true" keyProperty="xxx" for sqlserver and mysql -->
	<insert id="Attention.insert" useGeneratedKeys="true" keyProperty="flowId">
    <![CDATA[
        INSERT INTO bw_attention (
        	flow_id ,
        	attention_user_id ,
        	be_attention_user_id ,
        	attention_time ,
        	be_attention_identity 
        ) VALUES (
        	#{flowId} ,
        	#{attentionUserId} ,
        	#{beAttentionUserId} ,
        	#{attentionTime} ,
        	#{beAttentionIdentity} 
        )
    ]]>
		<!--	
			oracle: order="BEFORE" SELECT sequenceName.nextval AS ID FROM DUAL 
			DB2: order="BEFORE"" values nextval for sequenceName
		<selectKey resultType="java.lang.Long" order="BEFORE" keyProperty="userId">
			SELECT sequenceName.nextval AS ID FROM DUAL 
        </selectKey>
		-->
	</insert>
    
	<update id="Attention.update" >
    <![CDATA[
        UPDATE bw_attention SET
	        attention_user_id = #{attentionUserId} ,
	        be_attention_user_id = #{beAttentionUserId} ,
	        attention_time = #{attentionTime} ,
	        be_attention_identity = #{beAttentionIdentity} 
        WHERE 
	        flow_id = #{flowId} 
    ]]>
	</update>

    <delete id="Attention.delete">
    <![CDATA[
        DELETE FROM bw_attention WHERE
        flow_id = #{id} 
    ]]>
    </delete>
    
    <select id="Attention.getById" resultMap="RM.Attention">
		SELECT <include refid="Attention.columns" />
	    <![CDATA[
		    FROM bw_attention 
	        WHERE 
		        flow_id = #{id} 
	    ]]>
	</select>
	
	<sql id="Attention.findPage.where">
		<!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
		<where>	      				
	       <if test="@Ognl@isNotEmpty(flowId)">
				AND flow_id = #{flowId}
			</if>
	       <if test="@Ognl@isNotEmpty(attentionUserId)">
				AND attention_user_id = #{attentionUserId}
			</if>
	       <if test="@Ognl@isNotEmpty(beAttentionUserId)">
				AND be_attention_user_id = #{beAttentionUserId}
			</if>
	       <if test="@Ognl@isNotEmpty(attentionTimeBegin)">
				AND attention_time >= #{attentionTimeBegin}
		   </if>
		   <if test="@Ognl@isNotEmpty(attentionTimeEnd)">
				AND attention_time &lt;= #{attentionTimeEnd}
		   </if>
	       <if test="@Ognl@isNotEmpty(beAttentionIdentity)">
				AND be_attention_identity = #{beAttentionIdentity}
			</if>
		</where>
	</sql>
		
    <select id="Attention.findPage.count" resultType="long">
        SELECT count(*) FROM bw_attention 
		<include refid="Attention.findPage.where"/>    
    </select>
    
    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Attention.findPage" resultMap="RM.Attention">
    	SELECT <include refid="Attention.columns" />
	    FROM bw_attention 
		<include refid="Attention.findPage.where"/>
		
		<if test="@Ognl@isNotEmpty(sortColumns)">
			ORDER BY ${sortColumns}
		</if>
    </select>

	
</mapper>

